FROM python:3.13-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    gcc \
    libc6-dev \
    libffi-dev \
    libssl-dev \
    cargo \
    netcat-openbsd \
    rustc \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Create non-root user
RUN addgroup --gid 1001 appgroup && \
    adduser --uid 1001 --gid 1001 --disabled-password --gecos "" appuser

WORKDIR /app

# Install pip and setuptools first
RUN pip install --upgrade pip setuptools wheel

# Copy requirements first (poetry files)
COPY pyproject.toml poetry.lock ./

# Install Python dependencies directly from pyproject.toml
RUN pip install \
    django==5.2.4 \
    celery==5.5.2 \
    redis==6.1.0 \
    django-ninja==1.4.3 \
    django-ace==1.39.2 \
    psycopg2-binary==2.9.9 \
    pistonpy==0.0.3 \
    gunicorn==23.0.0 \
    watchdog==4.0.2 \
    && pip list | grep watchdog

# Copy the rest of the application
COPY . .

# Change ownership of the app directory to appuser
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Set environment variables
ENV PYTHONPATH=/app
ENV DJANGO_SETTINGS_MODULE=django_prog.settings

# Run worker as non-root user with watchdog auto-restart
# CMD ["tail", "-f", "/dev/null"]
# Alternative without watchdog: CMD ["celery", "-A", "django_prog", "worker", "--loglevel=info"]
CMD ["/bin/bash", "-c", "python -c 'import watchdog; print(\"Watchdog imported successfully\")' && python -m watchdog.watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A django_prog worker --loglevel=info"]
