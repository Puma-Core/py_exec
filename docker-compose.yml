services:
  db:
    image: postgres:15
    container_name: puma_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - puma_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  emkc:
    image: ghcr.io/engineer-man/piston/api:latest
    container_name: puma_emkc
    platform: linux/amd64
    ports:
      - "${EMKC_PORT:-8001}:2000"
    networks:
      - puma_network
    privileged: true
    volumes:
      - piston_packages:/piston/packages
    tmpfs:
      - /tmp:exec

  backend:
    build:
      context: .
      dockerfile: dockerfile.django
    container_name: puma_backend
    volumes:
      - .:/app:rw
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
      # emkc:
      #   condition: service_started
    environment:
      DEBUG: "1"
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    networks:
      - puma_network

  redis:
    image: redis:7-alpine
    container_name: puma_redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - puma_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  worker:
    container_name: puma_worker
    build:
      context: .
      dockerfile: dockerfile.django.worker
    volumes:
      - .:/app:rw
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DEBUG: "1"
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379/0
    networks:
      - puma_network

volumes:
  postgres_data:
  piston_packages:

networks:
  puma_network:
